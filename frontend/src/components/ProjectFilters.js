import React, { useState } from 'react';
import './ProjectFilters.css';

function ProjectFilters({ filters, onFiltersChange, onReset }) {
  const [localFilters, setLocalFilters] = useState({
    search: filters.search || '',
    projectType: filters.projectType || '',
    location: filters.location || '',
    dateFrom: filters.dateFrom || '',
    dateTo: filters.dateTo || '',
    status: filters.status || '' // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ —Ñ–∏–ª—å—Ç—Ä—ã
  });

  const [showFilters, setShowFilters] = useState(false);

  const projectTypes = [
    { value: 'ECOLOGY', label: 'üå± –≠–∫–æ–ª–æ–≥–∏—è' },
    { value: 'ANIMAL_WELFARE', label: 'üêæ –ó–∞—â–∏—Ç–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö' },
    { value: 'EDUCATION', label: 'üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ' },
    { value: 'SOCIAL', label: '‚ù§Ô∏è –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å' },
    { value: 'CULTURAL', label: 'üé® –ö—É–ª—å—Ç—É—Ä–∞' },
    { value: 'SPORTS', label: '‚öΩ –°–ø–æ—Ä—Ç' },
    { value: 'MEDICAL', label: 'üè• –ú–µ–¥–∏—Ü–∏–Ω–∞' },
    { value: 'OTHER', label: 'üîß –î—Ä—É–≥–æ–µ' }
  ];

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
  const statusOptions = [
    { value: '', label: '–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã' },
    { value: 'ACTIVE', label: 'üîµ –ê–∫—Ç–∏–≤–Ω—ã–µ' },
    { value: 'COMPLETED', label: '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ' },
    { value: 'CANCELLED', label: '‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ' }
  ];

  const handleFilterChange = (key, value) => {
    const newFilters = { ...localFilters, [key]: value };
    setLocalFilters(newFilters);
  };

  const handleApplyFilters = () => {
    onFiltersChange(localFilters);
  };

  const handleReset = () => {
    const resetFilters = {
      search: '',
      projectType: '',
      location: '',
      dateFrom: '',
      dateTo: '',
      status: '' // –î–æ–±–∞–≤–ª—è–µ–º —Å–±—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞
    };
    setLocalFilters(resetFilters);
    onReset();
  };

  return (
    <div className="project-filters">
      <div className="filters-header">
        <div className="search-box">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é..."
            value={localFilters.search}
            onChange={(e) => handleFilterChange('search', e.target.value)}
            onKeyPress={(e) => e.key === 'Enter' && handleApplyFilters()}
          />
          <button
            className="search-btn"
            onClick={handleApplyFilters}
          >
            üîç
          </button>
        </div>       
        
        <button
          className="toggle-filters-btn"
          onClick={() => setShowFilters(!showFilters)}
        >
          {showFilters ? '‚ñ≤ –°–∫—Ä—ã—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã' : '‚ñº –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã'}
        </button>
      </div>

      {showFilters && (
        <div className="filters-panel">
          <div className="filters-grid">
            {/* –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É */}
            <div className="filter-group">
              <label>–°—Ç–∞—Ç—É—Å:</label>
              <select
                value={localFilters.status}
                onChange={(e) => handleFilterChange('status', e.target.value)}
              >
                {statusOptions.map(option => (
                  <option key={option.value} value={option.value}>
                    {option.label}
                  </option>
                ))}
              </select>
            </div>

            <div className="filter-group">
              <label>–¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞:</label>
              <select
                value={localFilters.projectType}
                onChange={(e) => handleFilterChange('projectType', e.target.value)}
              >
                <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
                {projectTypes.map(type => (
                  <option key={type.value} value={type.value}>
                    {type.label}
                  </option>
                ))}
              </select>
            </div>

            <div className="filter-group">
              <label>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</label>
              <input
                type="text"
                placeholder="–ì–æ—Ä–æ–¥ –∏–ª–∏ –∞–¥—Ä–µ—Å..."
                value={localFilters.location}
                onChange={(e) => handleFilterChange('location', e.target.value)}
              />
            </div>

            <div className="filter-group">
              <label>–î–∞—Ç–∞ —Å:</label>
              <input
                type="date"
                value={localFilters.dateFrom}
                onChange={(e) => handleFilterChange('dateFrom', e.target.value)}
              />
            </div>

            <div className="filter-group">
              <label>–î–∞—Ç–∞ –ø–æ:</label>
              <input
                type="date"
                value={localFilters.dateTo}
                onChange={(e) => handleFilterChange('dateTo', e.target.value)}
              />
            </div>
          </div>

          <div className="filter-actions">
            <button
              className="btn btn-primary"
              onClick={handleApplyFilters}
            >
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </button>
            <button
              className="btn btn-secondary"
              onClick={handleReset}
            >
              –°–±—Ä–æ—Å–∏—Ç—å
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default ProjectFilters;