import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useParams } from 'react-router-dom';
import './ProjectApplications.css';

function ProjectApplications({ user }) {
  const { projectId } = useParams();
  const [applications, setApplications] = useState([]);
  const [loading, setLoading] = useState(true);
  const [project, setProject] = useState(null);

  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–æ–≤
  const getStatusText = (status) => {
    switch (status) {
      case 'PENDING': return '‚è≥ –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏';
      case 'APPROVED': return '‚úÖ –û–¥–æ–±—Ä–µ–Ω–∞';
      case 'REJECTED': return '‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∞';
      default: return status;
    }
  };

  useEffect(() => {
  const fetchData = async () => {
    try {
      const token = localStorage.getItem('token');
      
      // –î–û–ë–ê–í–õ–Ø–ï–ú –û–¢–õ–ê–î–û–ß–ù–£–Æ –ò–ù–§–û–†–ú–ê–¶–ò–Æ
      console.log('=== –û–¢–õ–ê–î–ö–ê ProjectApplications ===');
      console.log('Token –∏–∑ localStorage:', token);
      console.log('Project ID –∏–∑ URL:', projectId);
      console.log('–ü–æ–ª–Ω—ã–π URL:', `http://localhost:3000/api/projects/${projectId}/applications`);
      
      if (!token) {
        console.error('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage!');
        alert('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.');
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫–∏
      console.log('üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫...');
      const applicationsResponse = await axios.get(
        `http://localhost:3000/api/projects/${projectId}/applications`,
        {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        }
      );
      console.log('‚úÖ –ó–∞—è–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã:', applicationsResponse.data);
      setApplications(applicationsResponse.data);

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
      console.log('üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ...');
      const projectResponse = await axios.get(`http://localhost:3000/api/projects/${projectId}`);
      console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞:', projectResponse.data);
      setProject(projectResponse.data);

      setLoading(false);
      console.log('=== –û–¢–õ–ê–î–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===');
    } catch (error) {
      console.error('‚ùå –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:');
      console.error('- –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
      console.error('- –ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
      console.error('- URL –∑–∞–ø—Ä–æ—Å–∞:', error.config?.url);
      console.error('- –ú–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞:', error.config?.method);
      console.error('- –ó–∞–≥–æ–ª–æ–≤–∫–∏:', error.config?.headers);
      console.error('- –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', error.response?.status);
      console.error('- –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', error.response?.data);
      console.error('- –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞:', error.response?.statusText);
      
      alert(error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞—è–≤–æ–∫');
      setLoading(false);
    }
  };

  fetchData();
}, [projectId]);

  const handleStatusUpdate = async (applicationId, newStatus) => {
    try {
      const token = localStorage.getItem('token');
      await axios.put(
        `http://localhost:3000/api/applications/${applicationId}`,
        { status: newStatus },
        {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        }
      );

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
      setApplications(applications.map(app => 
        app.id === applicationId ? { ...app, status: newStatus } : app
      ));
    } catch (error) {
      alert(error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞');
    }
  };

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫...</div>;
  }

  if (!project) {
    return <div className="error">–ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;
  }

  return (
    <div className="project-applications">
      <h1>–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç: {project.title}</h1>
      <p className="project-description">{project.description}</p>
      
      {applications.length === 0 ? (
        <div className="no-applications">
          <p>–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç</p>
        </div>
      ) : (
        <div className="applications-list">
          {applications.map(application => (
            <div key={application.id} className="application-card">
              <div className="application-header">
                <h3>{application.user.firstName} {application.user.lastName}</h3>
                {/* –ó–î–ï–°–¨ –ü–†–û–ò–°–•–û–î–ò–¢ –ó–ê–ú–ï–ù–ê - —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –º–µ–Ω—è–µ—Ç—Å—è */}
                <span className={`status status-${application.status.toLowerCase()}`}>
                  {getStatusText(application.status)}
                </span>
              </div>
              
              <div className="application-details">
                <p><strong>Email:</strong> {application.user.email}</p>
                <p><strong>–†–æ–ª—å:</strong> {application.user.role === 'volunteer' ? '–í–æ–ª–æ–Ω—Ç–µ—Ä' : '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä'}</p>
                {application.message && (
                  <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {application.message}</p>
                )}
                <p><strong>–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏:</strong> {new Date(application.createdAt).toLocaleString()}</p>
              </div>

              {application.status === 'PENDING' && (
                <div className="application-actions">
                  <button 
                    className="btn-approve"
                    onClick={() => handleStatusUpdate(application.id, 'APPROVED')}
                  >
                    –û–¥–æ–±—Ä–∏—Ç—å
                  </button>
                  <button 
                    className="btn-reject"
                    onClick={() => handleStatusUpdate(application.id, 'REJECTED')}
                  >
                    –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                  </button>
                </div>
              )}
            </div>
          ))}
        </div>
      )}
    </div>
  );
}

export default ProjectApplications;