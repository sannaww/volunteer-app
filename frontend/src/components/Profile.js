import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './Profile.css';
import OrganizerStats from './OrganizerStats';
import DraftProjects from './DraftProjects';
const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';

function Profile({ user }) {
  const [activeTab, setActiveTab] = useState('profile');
  const [profile, setProfile] = useState(null);
  const [participationHistory, setParticipationHistory] = useState([]);
  const [loading, setLoading] = useState(false);
  const [editing, setEditing] = useState(false);
  const [formData, setFormData] = useState({});
  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ user, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –µ—Å—Ç—å –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞
  useEffect(() => {
  const fetchUserProfile = async () => {
    if (user) {
      try {
        const token = localStorage.getItem('token');
        if (!token) return;

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
        const response = await axios.get('${API_URL}/api/auth/me', {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });

        const userData = response.data;
        console.log('üì• –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –±–∞–∑—ã:', userData);

        const userProfile = {
          firstName: userData.firstName,
          lastName: userData.lastName,
          email: userData.email,
          role: userData.role,
          phone: userData.phone || '',
          skills: userData.skills || '',
          interests: userData.interests || '',
          bio: userData.bio || '',
          createdAt: userData.createdAt
        };

        setProfile(userProfile);
        setFormData(userProfile);

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
        localStorage.setItem('user', JSON.stringify(userData));

      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:', error);
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –±–∞–∑—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
        const userProfile = {
          firstName: user.firstName,
          lastName: user.lastName,
          email: user.email,
          role: user.role,
          phone: user.phone || '',
          skills: user.skills || '',
          interests: user.interests || '',
          bio: user.bio || '',
          createdAt: user.createdAt || new Date().toISOString()
        };
        setProfile(userProfile);
        setFormData(userProfile);
      }
    }
  };

  fetchUserProfile();
}, [user]);
  useEffect(() => {
    if (user && activeTab === 'history') {
      fetchParticipationHistory();
    }
  }, [activeTab, user]);

  const fetchParticipationHistory = async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) return;
      const response = await axios.get('${API_URL}/api/profile/participation-history', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      setParticipationHistory(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ —É—á–∞—Å—Ç–∏—è:', error);
    }
  };

 const handleSaveProfile = async (e) => {
  e.preventDefault();
  
  try {
    const token = localStorage.getItem('token');
    if (!token) {
      alert('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
      return;
    }

    const response = await axios.put('${API_URL}/api/profile', {
      firstName: formData.firstName,
      lastName: formData.lastName,
      phone: formData.phone,
      skills: formData.skills,
      interests: formData.interests,
      bio: formData.bio
    }, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);

    // –û–ë–ù–û–í–õ–Ø–ï–ú –í–°–ï –ü–û–õ–Ø –í LOCALSTORAGE
    const updatedUser = {
      ...user,
      firstName: response.data.firstName,
      lastName: response.data.lastName,
      phone: response.data.phone,
      skills: response.data.skills,
      interests: response.data.interests,
      bio: response.data.bio
    };

    localStorage.setItem('user', JSON.stringify(updatedUser));
    
    // –û–ë–ù–û–í–õ–Ø–ï–ú –°–û–°–¢–û–Ø–ù–ò–ï –ü–†–û–§–ò–õ–Ø
    setProfile(response.data);
    console.log('üîÑ profile –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', profile);
console.log('üîÑ –ù–∞–≤—ã–∫–∏ –≤ profile –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', profile.skills);
    setEditing(false);
    
    alert('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: ' + error.message);
  }
};

const handleInputChange = (e) => {
  const { name, value } = e.target;
  /*console.log(`üîç –ü–æ–ª–µ "${name}" –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞: "${value}"`);*/
  
  // –¢–û–õ–¨–ö–û –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
  if (name === 'phone') {
    let cleanedValue = value.replace(/[^\d+]/g, '');
    
    if (cleanedValue.startsWith('8')) {
      cleanedValue = '+7' + cleanedValue.substring(1);
    } else if (cleanedValue.startsWith('7') && !cleanedValue.startsWith('+7')) {
      cleanedValue = '+7' + cleanedValue.substring(1);
    } else if (!cleanedValue.startsWith('+')) {
      cleanedValue = '+7' + cleanedValue;
    }
    
    if (cleanedValue.length > 12) {
      cleanedValue = cleanedValue.substring(0, 12);
    }
    
    setFormData(prevFormData => ({
      ...prevFormData,
      [name]: cleanedValue
    }));
  } else {
    // –î–ª—è –í–°–ï–• –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π (–Ω–∞–≤—ã–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å—ã, bio) - –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    setFormData(prevFormData => ({
      ...prevFormData,
      [name]: value
    }));
  }
  /*console.log('üìä formData –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:', formData);*/
};

  const handleDeleteAccount = async () => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –í—Å–µ –≤–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã –∏ –∑–∞—è–≤–∫–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.')) {
      return;
    }

    try {
      const token = localStorage.getItem('token');
      await axios.delete('${API_URL}/api/auth/account', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      alert('–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      window.location.href = '/';
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞:', error);
      alert(error.response?.data?.error || '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç');
    }
  };

  const generateCertificate = (project) => {
    if (!profile) {
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      return;
    }

    const certificateText = `
      –°–ï–†–¢–ò–§–ò–ö–ê–¢ –í–û–õ–û–ù–¢–ï–†–ê
      –ù–∞—Å—Ç–æ—è—â–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ
      ${profile.firstName} ${profile.lastName}
      –ø—Ä–∏–Ω—è–ª(–∞) —É—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ:
      "${project.project.title}"
      –î–∞—Ç–∞ —É—á–∞—Å—Ç–∏—è: ${new Date(project.createdAt).toLocaleDateString('ru-RU')}
      –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: ${project.project.creator.firstName} ${project.project.creator.lastName}
      –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤–∞—à –≤–∫–ª–∞–¥!  `;

    const blob = new Blob([certificateText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç_${project.project.title.replace(/\s+/g, '_')}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };
const formatPhoneDisplay = (phone) => {
  if (!phone) return '–ù–µ —É–∫–∞–∑–∞–Ω';
  
  const cleaned = phone.replace(/\D/g, '');
  
  if (cleaned.length === 11 && (cleaned.startsWith('7') || cleaned.startsWith('8'))) {
    const match = cleaned.match(/^[78]?(\d{3})(\d{3})(\d{2})(\d{2})$/);
    if (match) {
      return `+7 (${match[1]}) ${match[2]}-${match[3]}-${match[4]}`;
    }
  }
  
  return phone;
};

// –í —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
const handleEditStart = () => {
  console.log('üîç –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–µ—Ä–µ–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º:', profile);
  console.log('üîç formData –ø–µ—Ä–µ–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º:', formData);
  setEditing(true);
  // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ formData —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
  setFormData({
    firstName: profile.firstName || '',
    lastName: profile.lastName || '',
    phone: profile.phone || '',
    skills: profile.skills || '',
    interests: profile.interests || '',
    bio: profile.bio || ''
  });
};
  if (!user) {
    return (
      <div className="error-container">
        <div className="error">
          <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
          <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</p>
          <div className="error-actions">
            <button
              onClick={() => window.location.href = '/login'}
              className="btn btn-primary"
            >
              –í–æ–π—Ç–∏
            </button>
          </div>
        </div>
      </div>
    );
  }

  if (!profile) {
    return <div className="loading">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</div>;
  }

  return (
    <div className="profile">
      <div className="profile-header">
        <h1>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
      </div>

      <div className="profile-tabs-container">
        <div className="profile-tabs">
          <button
            className={`tab ${activeTab === 'profile' ? 'active' : ''}`}
            onClick={() => setActiveTab('profile')}
          >
            üìù –ü—Ä–æ—Ñ–∏–ª—å
          </button>
          <button
            className={`tab ${activeTab === 'history' ? 'active' : ''}`}
            onClick={() => setActiveTab('history')}
          >
            üìä –ò—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–∏—è
          </button>
          <button
            className={`tab ${activeTab === 'applications' ? 'active' : ''}`}
            onClick={() => setActiveTab('applications')}
          >
            üì® –ú–æ–∏ –∑–∞—è–≤–∫–∏
          </button>
          {user && user.role === 'organizer' && (
            <button
              className={`tab ${activeTab === 'stats' ? 'active' : ''}`}
              onClick={() => setActiveTab('stats')}
            >
              üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </button>
          )}
          {user && user.role === 'organizer' && (
            <button
              className={`tab ${activeTab === 'drafts' ? 'active' : ''}`}
              onClick={() => setActiveTab('drafts')}
            >
              üìã –ß–µ—Ä–Ω–æ–≤–∏–∫–∏
            </button>
          )}
        </div>
      </div>

      <div className="profile-content">
        {activeTab === 'profile' && (
          <div className="profile-section">
            <div className="section-header">
              <h2>–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              {!editing ? (
                <button
                  className="btn btn-primary"
                  onClick={handleEditStart} 
                >
                  ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
              ) : (
                <div className="edit-actions">
                  <button
                    className="btn btn-success"
                    onClick={handleSaveProfile}
                  >
                    üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                  </button>
                  <button
                    className="btn btn-secondary"
                    onClick={() => {
                      setEditing(false);
                      setFormData(profile);
                    }}
                  >
                    ‚ùå –û—Ç–º–µ–Ω–∞
                  </button>
                </div>
              )}
            </div>

            {editing ? (
              <form className="profile-form">
                <div className="form-row">
                  <div className="form-group">
                    <label>–ò–º—è:</label>
                    <input
                      type="text"
                      name="firstName"
                      value={formData.firstName || ''}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                  <div className="form-group">
                    <label>–§–∞–º–∏–ª–∏—è:</label>
                    <input
                      type="text"
                      name="lastName"
                      value={formData.lastName || ''}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>
                <div className="form-group">
                  <label>Email:</label>
                  <input
                    type="email"
                    value={profile.email}
                    disabled
                    className="disabled-input"
                  />
                  <small>Email –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å</small>
                </div>
                <div className="form-group">
                <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
                <input
                  type="tel"
                  name="phone"
                  value={formData.phone || ''}
                  onChange={handleInputChange}
                  placeholder="+7 (XXX) XXX-XX-XX"
                  pattern="^\+7\d{10}$"
                  maxLength="12"
                />
                <small>–§–æ—Ä–º–∞—Ç: +79991234567</small>
              </div>
                <div className="form-group">
                  <label>–ù–∞–≤—ã–∫–∏:</label>
                  <input
                    type="text"
                    name="skills"
                    value={formData.skills || ''}
                    onChange={(e) => {
                      console.log('üìù –ù–∞–≤—ã–∫–∏ –∏–∑–º–µ–Ω—è—é—Ç—Å—è –Ω–∞:', e.target.value);
                      setFormData(prev => ({ ...prev, skills: e.target.value }));
                    }}
                    placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–∞—à–∏ –Ω–∞–≤—ã–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é"
                  />
                </div>
                <div className="form-group">
                  <label>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</label>
                  <textarea
                    name="interests"
                    value={formData.interests || ''}
                    onChange={handleInputChange}
                    placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é"
                    rows="3"
                  />
                </div>
                <div className="form-group">
                  <label>–û —Å–µ–±–µ:</label>
                  <textarea
                    name="bio"
                    value={formData.bio || ''}
                    onChange={handleInputChange}
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ, —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–∞"
                    rows="4"
                  />
                </div>
              </form>
            ) : (
              <div className="profile-info">
                <div className="info-grid">
                  <div className="info-item">
                    <strong>–ò–º—è:</strong>
                    <span>{profile.firstName} {profile.lastName}</span>
                  </div>
                  <div className="info-item">
                    <strong>Email:</strong>
                    <span>{profile.email}</span>
                  </div>
                  <div className="info-item">
                    <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong>
                    <span>{formatPhoneDisplay(profile.phone)}</span>
                  </div>
                  <div className="info-item">
                    <strong>–ù–∞–≤—ã–∫–∏:</strong>
                    <span>{profile.skills || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}</span>
                  </div>
                  <div className="info-item">
                    <strong>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</strong>
                    <span>{profile.interests || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}</span>
                  </div>
                  <div className="info-item full-width">
                    <strong>–û —Å–µ–±–µ:</strong>
                    <span>{profile.bio || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                  </div>
                  <div className="info-item">
                    <strong>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong>
                    <span>{profile.createdAt ? new Date(profile.createdAt).toLocaleDateString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
                  </div>
                </div>
              </div>
            )}

            {/* –°–µ–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ - –¢–û–õ–¨–ö–û –≤ –ø—Ä–æ—Ñ–∏–ª–µ */}
            <div className="account-deletion-section">
              <div className="danger-zone">
                <button
                  className="btn btn-danger"
                  onClick={() => setShowDeleteConfirm(true)}
                >
                  üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                </button>
              </div>
            </div>

            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –¢–û–õ–¨–ö–û –≤ –ø—Ä–æ—Ñ–∏–ª–µ */}
            {showDeleteConfirm && (
              <div className="modal-overlay">
                <div className="modal-content">
                  <div className="modal-header">
                    <h2>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞</h2>
                    <button
                      className="close-btn"
                      onClick={() => setShowDeleteConfirm(false)}
                    >
                      √ó
                    </button>
                  </div>
                  
                  <div className="delete-warning">
                    <div className="warning-icon">‚ö†Ô∏è</div>
                    <h3>–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ</h3>
                    <p>–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã:</p>
                    <ul>
                      <li>‚úÖ –í—Å–µ –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</li>
                      <li>‚úÖ –í—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤–∞–º–∏ –ø—Ä–æ–µ–∫—Ç—ã</li>
                      <li>‚úÖ –í—Å–µ –ø–æ–¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏</li>
                      <li>‚úÖ –í—Å—è –∏—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–∏—è</li>
                    </ul>
                    <p><strong>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?</strong></p>
                  </div>

                  <div className="modal-actions">
                    <button
                      className="btn btn-danger"
                      onClick={handleDeleteAccount}
                    >
                      –î–∞, —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                    </button>
                    <button
                      className="btn btn-secondary"
                      onClick={() => setShowDeleteConfirm(false)}
                    >
                      –û—Ç–º–µ–Ω–∞
                    </button>
                  </div>
                </div>
              </div>
            )}
          </div>
        )}

        {activeTab === 'history' && (
          <div className="profile-section">
            <h2>–ò—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–∏—è</h2>
            {participationHistory.length === 0 ? (
              <div className="empty-state">
                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</p>
                <p>–ü–æ–¥–∞–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏!</p>
              </div>
            ) : (
              <div className="history-list">
                {participationHistory.map(participation => (
                  <div key={participation.id} className="history-item">
                    <div className="history-content">
                      <h3>{participation.project.title}</h3>
                      <p>{participation.project.description}</p>
                      <div className="history-meta">
                        <span>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {participation.project.creator.firstName} {participation.project.creator.lastName}</span>
                        <span>–î–∞—Ç–∞ —É—á–∞—Å—Ç–∏—è: {new Date(participation.createdAt).toLocaleDateString('ru-RU')}</span>
                      </div>
                    </div>
                    <button
                      className="btn btn-primary"
                      onClick={() => generateCertificate(participation)}
                    >
                      üìÑ –°–∫–∞—á–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
                    </button>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}

        {activeTab === 'applications' && (
          <div className="profile-section">
            <h2>–ú–æ–∏ –∑–∞—è–≤–∫–∏</h2>
            <p>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º–∏ –∑–∞—è–≤–∫–∞–º–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ú–æ–∏ –∑–∞—è–≤–∫–∏".</p>
            <button
              className="btn btn-primary"
              onClick={() => window.location.href = '/my-applications'}
            >
              üì® –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–æ–∏–º –∑–∞—è–≤–∫–∞–º
            </button>
          </div>
        )}

        {activeTab === 'stats' && (
          <div className="profile-section">
            <OrganizerStats user={user} />
          </div>
        )}

        {activeTab === 'drafts' && (
          <div className="profile-section">
            <DraftProjects user={user} />
          </div>
        )}
      </div>
    </div>
  );
}

export default Profile;