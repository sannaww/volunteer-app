import React, { useState, useEffect } from 'react';
import axios from 'axios';
import ProjectFilters from './ProjectFilters';
import './ProjectList.css';
const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';

function ProjectList({ user }) {
  const [projects, setProjects] = useState([]);
  const [filteredProjects, setFilteredProjects] = useState([]);
  const [loading, setLoading] = useState(true);
  const [filters, setFilters] = useState({
    search: '',
    projectType: '',
    location: '',
    dateFrom: '',
    dateTo: ''
  });
  const [showDeleteModal, setShowDeleteModal] = useState(false);
  const [projectToDelete, setProjectToDelete] = useState(null);
  const [editingProject, setEditingProject] = useState(null);

  useEffect(() => {
    fetchProjects();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    // const interval = setInterval(fetchProjects, 30000);
    
    // return () => clearInterval(interval);
  }, []);

  const fetchProjects = async (currentFilters = filters) => {
  try {
    setLoading(true);
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    const params = new URLSearchParams();
    if (currentFilters.search) params.append('search', currentFilters.search);
    if (currentFilters.projectType) params.append('projectType', currentFilters.projectType);
    if (currentFilters.location) params.append('location', currentFilters.location);
    if (currentFilters.dateFrom) params.append('dateFrom', currentFilters.dateFrom);
    if (currentFilters.dateTo) params.append('dateTo', currentFilters.dateTo);
    if (currentFilters.status) params.append('status', currentFilters.status);

    console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:', params.toString()); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

    const response = await axios.get(`${API_URL}/api/projects?${params}`);
    
    setProjects(response.data);
    setFilteredProjects(response.data);
    setLoading(false);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error);
    setLoading(false);
  }
};

  const handleFiltersChange = (newFilters) => {
    setFilters(newFilters);
    fetchProjects(newFilters);
  };

  const handleResetFilters = () => {
    const resetFilters = {
      search: '',
      projectType: '',
      location: '',
      dateFrom: '',
      dateTo: ''
    };
    setFilters(resetFilters);
    fetchProjects(resetFilters);
  };

  const handleApply = async (projectId) => {
    if (!user) {
      alert('–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
      return;
    }

    try {
      const token = localStorage.getItem('token');
      const message = prompt('–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):');
      
      await axios.post(
        `${API_URL}/api/projects/${projectId}/applications`,
        { message: message || '' },
        {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        }
      );
      
      alert('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–Ω–∞!');
      fetchProjects(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
    } catch (error) {
      alert(error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏');
    }
  };

  const handleEdit = (project) => {
    setEditingProject(project);
  };

  const handleSaveEdit = async (updatedProject) => {
  try {
    const token = localStorage.getItem('token');
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const dataToSend = {
      title: updatedProject.title,
      description: updatedProject.description,
      status: updatedProject.status,
      startDate: updatedProject.startDate || null,
      endDate: updatedProject.endDate || null,
      location: updatedProject.location || '',
      projectType: updatedProject.projectType || '',
      volunteersRequired: updatedProject.volunteersRequired || 1,
      contactInfo: updatedProject.contactInfo || ''
    };

    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', dataToSend); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

    const response = await axios.put(
      `${API_URL}/api/projects/${updatedProject.id}`,
      dataToSend,
      {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      }
    );

    setEditingProject(null);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    setProjects(projects.map(project => 
      project.id === updatedProject.id ? response.data : project
    ));
    setFilteredProjects(filteredProjects.map(project => 
      project.id === updatedProject.id ? response.data : project
    ));
    
    alert('–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:', error);
    alert(error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞');
  }
};

  const handleDeleteClick = (project) => {
    setProjectToDelete(project);
    setShowDeleteModal(true);
  };

  const handleDeleteConfirm = async () => {
    try {
      const token = localStorage.getItem('token');
      await axios.delete(
        `${API_URL}/api/projects/${projectToDelete.id}`,
        {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        }
      );
      
      setShowDeleteModal(false);
      setProjectToDelete(null);
      fetchProjects(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
      alert('–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
    } catch (error) {
      alert(error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞');
    }
  };

  const getProjectTypeLabel = (projectType) => {
    const typeMap = {
      'ECOLOGY': 'üå± –≠–∫–æ–ª–æ–≥–∏—è',
      'ANIMAL_WELFARE': 'üêæ –ó–∞—â–∏—Ç–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö',
      'EDUCATION': 'üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      'SOCIAL': '‚ù§Ô∏è –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å',
      'CULTURAL': 'üé® –ö—É–ª—å—Ç—É—Ä–∞',
      'SPORTS': '‚öΩ –°–ø–æ—Ä—Ç',
      'MEDICAL': 'üè• –ú–µ–¥–∏—Ü–∏–Ω–∞',
      'OTHER': 'üîß –î—Ä—É–≥–æ–µ'
    };
    return typeMap[projectType] || projectType;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
const getStatusText = (status) => {
  const statusMap = {
    'DRAFT': 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫',
    'ACTIVE': 'üü¢ –ê–∫—Ç–∏–≤–Ω—ã–π', 
    'COMPLETED': '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω',
    'CANCELLED': 'üî¥ –û—Ç–º–µ–Ω–µ–Ω'
  };
  return statusMap[status] || status;
};

const getStatusClass = (status) => {
  return `status-${status.toLowerCase()}`;
};

  const formatDate = (dateString) => {
    if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    return new Date(dateString).toLocaleDateString('ru-RU');
  };
const formatPhoneDisplay = (phone) => {
  if (!phone) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
  
  const cleaned = phone.replace(/\D/g, '');
  
  if (cleaned.length === 11 && (cleaned.startsWith('7') || cleaned.startsWith('8'))) {
    const match = cleaned.match(/^[78]?(\d{3})(\d{3})(\d{2})(\d{2})$/);
    if (match) {
      return `+7 (${match[1]}) ${match[2]}-${match[3]}-${match[4]}`;
    }
  }
  
  return phone;
};
const handleMessageOrganizer = async (project) => {
  if (!user) {
    alert('–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
    return;
  }
  
  console.log('–ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞:', project);
  
  let organizerInfo = null;
  
  // –í–∞—Ä–∏–∞–Ω—Ç 1: –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
  if (project.creator && project.creator.id) {
    organizerInfo = {
      id: project.creator.id,
      firstName: project.creator.firstName,
      lastName: project.creator.lastName,
      role: 'organizer'
    };
    console.log('–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞:', organizerInfo);
  } 
  // –í–∞—Ä–∏–∞–Ω—Ç 2: –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å —Å–µ—Ä–≤–µ—Ä–∞
  else {
    try {
      console.log('–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–µ —Å —Å–µ—Ä–≤–µ—Ä–∞...');
      const response = await axios.get(`${API_URL}/api/projects/${project.id}/organizer`);
      organizerInfo = {
        id: response.data.id,
        firstName: response.data.firstName,
        lastName: response.data.lastName,
        role: response.data.role
      };
      console.log('–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å —Å–µ—Ä–≤–µ—Ä–∞:', organizerInfo);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞');
      return;
    }
  }
  
  if (!organizerInfo) {
    alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
  localStorage.setItem('selectedOrganizer', JSON.stringify(organizerInfo));
  
  // –î–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const saved = localStorage.getItem('selectedOrganizer');
  console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', saved);
  
  if (!saved) {
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞');
    return;
  }
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
  console.log('–ü–µ—Ä–µ—Ö–æ–¥ –≤ —á–∞—Ç...');
  window.location.href = '/chat';
};


  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...</div>;
  }

  return (
    <div className="project-list">
      <div className="page-header">
        <h1>–í–æ–ª–æ–Ω—Ç–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã</h1>
        <button 
          className="btn btn-primary"
          onClick={() => fetchProjects()}
          disabled={loading}
        >
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å
        </button>
      </div>

      <ProjectFilters 
        filters={filters}
        onFiltersChange={handleFiltersChange}
        onReset={handleResetFilters}
      />

      <div className="projects-stats">
        –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {filteredProjects.length}
      </div>
      
      <div className="projects-grid">
        {filteredProjects.map(project => (
          <div key={project.id} className="project-card">
            <div className="project-header">
  <div className="project-title-section">
    <h2>{project.title}</h2>
    <span className={`project-status ${getStatusClass(project.status)}`}>
      {getStatusText(project.status)}
    </span>
  </div>
  {project.projectType && (
    <span className="project-type-badge">
      {getProjectTypeLabel(project.projectType)}
    </span>
  )}
</div>
            
            <p>{project.description}</p>
            
            <div className="project-meta">
              <div className="meta-item">
                <strong>üìÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</strong>
                <span>{formatDate(project.startDate)}</span>
              </div>
              <div className="meta-item">
                <strong>üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</strong>
                <span>{project.location || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
              </div>
              <div className="meta-item">
                <strong>üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å:</strong>
                <span>{project.creator.firstName} {project.creator.lastName}</span>
              </div>
              <div className="meta-item">
                <strong>üë• –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤:</strong>
                <span>{project.volunteersRequired}</span>
              </div>
              <div className="meta-item">
  <strong>üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:</strong>
  <span>
    {project.contactInfo ? 
      (project.contactInfo.includes('@') 
        ? project.contactInfo
        : formatPhoneDisplay(project.contactInfo)
      ) 
      : '–ù–µ —É–∫–∞–∑–∞–Ω—ã'
    }
  </span>
</div>
              <div className="meta-item">
                <strong>üìä –ó–∞—è–≤–∫–∏:</strong>
                <span>
                  –í—Å–µ–≥–æ: {project.applicationsCount} 
                  {project.pendingApplicationsCount > 0 && 
                    `, –ù–æ–≤—ã–µ: ${project.pendingApplicationsCount}`
                  }
                </span>
              </div>
            </div>

           <div className="project-actions">
  {user && user.role === 'volunteer' && (
    <>
      {project.status === 'ACTIVE' ? (
        <>
          {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ */}
          <button
            className="btn btn-primary"
            onClick={() => handleApply(project.id)}
          >
            üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
          </button>
          <button
            className="btn btn-secondary"
            onClick={() => handleMessageOrganizer(project)}
          >
            üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É
          </button>
        </>
      ) : (
        <div className="project-not-available">
          {project.status === 'COMPLETED' 
            ? '‚úÖ –ü—Ä–æ–µ–∫—Ç –∑–∞–≤–µ—Ä—à–µ–Ω' 
            : '‚ùå –ü—Ä–æ–µ–∫—Ç –æ—Ç–º–µ–Ω–µ–Ω'}
          <br />
          <small>–ó–∞—è–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è</small>
        </div>
      )}
    </>
  )}            
              {user && user.id === project.createdBy && (
                <>
                  <button 
                    className="btn btn-warning"
                    onClick={() => handleEdit(project)}
                  >
                    ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                  <button 
                    className="btn btn-danger"
                    onClick={() => handleDeleteClick(project)}
                  >
                    üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                  </button>
                </>
              )}
              
              {user && user.id === project.createdBy && (
                <button 
                  className="btn btn-success"
                  onClick={() => window.location.href = `/project-applications/${project.id}`}
                >
                  üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ 
                  {project.pendingApplicationsCount > 0 && 
                    ` (${project.pendingApplicationsCount} –Ω–æ–≤—ã—Ö)`
                  }
                </button>
              )}
            </div>
          </div>
        ))}
      </div>

      {filteredProjects.length === 0 && (
        <div className="empty-state">
          <h3>–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</p>
          <button 
            className="btn btn-primary"
            onClick={handleResetFilters}
          >
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
      {showDeleteModal && (
        <div className="modal-overlay">
          <div className="modal-content">
            <div className="modal-header">
              <h2>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è</h2>
              <button 
                className="close-btn"
                onClick={() => setShowDeleteModal(false)}
              >
                √ó
              </button>
            </div>
            <p>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç "{projectToDelete?.title}"?</p>
            <p>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.</p>
            <div style={{ display: 'flex', gap: '1rem', marginTop: '1.5rem' }}>
              <button 
                className="btn btn-danger"
                onClick={handleDeleteConfirm}
              >
                –î–∞, —É–¥–∞–ª–∏—Ç—å
              </button>
              <button 
                className="btn"
                onClick={() => setShowDeleteModal(false)}
                style={{ backgroundColor: '#6c757d', color: 'white' }}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      {editingProject && (
        <EditProjectModal 
          project={editingProject}
          onSave={handleSaveEdit}
          onCancel={() => setEditingProject(null)}
        />
      )}
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
function EditProjectModal({ project, onSave, onCancel }) {
  const [formData, setFormData] = useState({
    title: project.title,
    description: project.description,
    status: project.status,
    startDate: project.startDate ? new Date(project.startDate).toISOString().split('T')[0] : '',
    endDate: project.endDate ? new Date(project.endDate).toISOString().split('T')[0] : '',
    location: project.location || '',
    projectType: project.projectType || '',
    volunteersRequired: project.volunteersRequired || 1,
    contactInfo: project.contactInfo || ''
  });

  const projectTypes = [
    { value: 'ECOLOGY', label: 'üå± –≠–∫–æ–ª–æ–≥–∏—è' },
    { value: 'ANIMAL_WELFARE', label: 'üêæ –ó–∞—â–∏—Ç–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö' },
    { value: 'EDUCATION', label: 'üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ' },
    { value: 'SOCIAL', label: '‚ù§Ô∏è –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å' },
    { value: 'CULTURAL', label: 'üé® –ö—É–ª—å—Ç—É—Ä–∞' },
    { value: 'SPORTS', label: '‚öΩ –°–ø–æ—Ä—Ç' },
    { value: 'MEDICAL', label: 'üè• –ú–µ–¥–∏—Ü–∏–Ω–∞' },
    { value: 'OTHER', label: 'üîß –î—Ä—É–≥–æ–µ' }
  ];

  const handleSubmit = (e) => {
  e.preventDefault();
  console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:', formData); // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  onSave({
    ...project,
    ...formData,
    volunteersRequired: parseInt(formData.volunteersRequired)
  });
};

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <div className="modal-overlay">
      <div className="modal-content">
        <div className="modal-header">
          <h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç</h2>
          <button className="close-btn" onClick={onCancel}>√ó</button>
        </div>
        
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label>–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:</label>
            <input
              type="text"
              name="title"
              value={formData.title}
              onChange={handleChange}
              required
              style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
            />
          </div>

          <div className="form-group">
            <label>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
            <textarea
              name="description"
              value={formData.description}
              onChange={handleChange}
              required
              rows="5"
              style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
            />
          </div>

          <div className="form-row">
            <div className="form-group">
              <label>–¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞:</label>
              <select
                name="projectType"
                value={formData.projectType}
                onChange={handleChange}
                style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                {projectTypes.map(type => (
                  <option key={type.value} value={type.value}>
                    {type.label}
                  </option>
                ))}
              </select>
            </div>

            <div className="form-group">
              <label>–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤:</label>
              <input
                type="number"
                name="volunteersRequired"
                value={formData.volunteersRequired}
                onChange={handleChange}
                min="1"
                style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
              />
            </div>
          </div>

          <div className="form-row">
            <div className="form-group">
              <label>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</label>
              <input
                type="date"
                name="startDate"
                value={formData.startDate}
                onChange={handleChange}
                style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
              />
            </div>

            <div className="form-group">
              <label>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</label>
              <input
                type="date"
                name="endDate"
                value={formData.endDate}
                onChange={handleChange}
                style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
              />
            </div>
          </div>

          <div className="form-group">
            <label>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</label>
            <input
              type="text"
              name="location"
              value={formData.location}
              onChange={handleChange}
              placeholder="–ì–æ—Ä–æ–¥ –∏–ª–∏ –∞–¥—Ä–µ—Å..."
              style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
            />
          </div>

          <div className="form-group">
            <label>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</label>
            <input
              type="text"
              name="contactInfo"
              value={formData.contactInfo}
              onChange={handleChange}
              placeholder="Email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω..."
              style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
            />
          </div>

          <div className="form-group">
            <label>–°—Ç–∞—Ç—É—Å:</label>
            <select
              name="status"
              value={formData.status}
              onChange={handleChange}
              style={{ width: '100%', padding: '0.5rem', marginBottom: '1rem' }}
            >
              <option value="DRAFT">–ß–µ—Ä–Ω–æ–≤–∏–∫</option>
              <option value="ACTIVE">–ê–∫—Ç–∏–≤–Ω—ã–π</option>
              <option value="COMPLETED">–ó–∞–≤–µ—Ä—à–µ–Ω</option>
              <option value="CANCELLED">–û—Ç–º–µ–Ω–µ–Ω</option>
            </select>
          </div>

          <div style={{ display: 'flex', gap: '1rem' }}>
            <button type="submit" className="btn btn-primary">
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </button>
            <button
              type="button"
              className="btn"
              onClick={onCancel}
              style={{ backgroundColor: '#6c757d', color: 'white' }}
            >
              –û—Ç–º–µ–Ω–∞
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

export default ProjectList;