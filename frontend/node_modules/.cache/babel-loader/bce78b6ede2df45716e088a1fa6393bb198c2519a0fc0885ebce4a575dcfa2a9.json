{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emili\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\volonters\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  user\n}) {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [activeConversation, setActiveConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    if (user) {\n      fetchConversations();\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user && (activeConversation || selectedUser)) {\n      if (activeConversation) {\n        fetchMessages();\n        // Опрос новых сообщений каждые 3 секунды\n        const interval = setInterval(fetchMessages, 3000);\n        return () => clearInterval(interval);\n      }\n    }\n  }, [activeConversation, selectedUser, user]);\n\n  // Проверяем, есть ли выбранный организатор для нового диалога\n  useEffect(() => {\n    const checkForNewConversation = () => {\n      const savedOrganizer = localStorage.getItem('selectedOrganizer');\n      if (savedOrganizer) {\n        const organizer = JSON.parse(savedOrganizer);\n        console.log('Найден сохраненный организатор:', organizer);\n\n        // Очищаем сохраненные данные\n        localStorage.removeItem('selectedOrganizer');\n        localStorage.removeItem('selectedProject');\n\n        // Ищем существующий диалог\n        const existingConversation = conversations.find(conv => conv.user.id === organizer.id);\n        if (existingConversation) {\n          console.log('Найден существующий диалог');\n          setActiveConversation(existingConversation);\n        } else {\n          console.log('Создаем новый диалог');\n          // Создаем временный объект пользователя для нового диалога\n          setSelectedUser(organizer);\n        }\n      }\n    };\n    if (conversations.length > 0) {\n      checkForNewConversation();\n    }\n  }, [conversations]);\n  const fetchConversations = async () => {\n    if (!user) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:3000/api/messages/conversations', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Загружены диалоги:', response.data);\n      setConversations(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Ошибка при загрузке диалогов:', error);\n      setLoading(false);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !activeConversation) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:3000/api/messages/conversation/${activeConversation.user.id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Ошибка при загрузке сообщений:', error);\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const handleSelectConversation = conversation => {\n    setActiveConversation(conversation);\n    setSelectedUser(null);\n    setMessages([]);\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    console.log('Попытка отправить сообщение...');\n    if (!newMessage.trim() || !user) {\n      console.log('Сообщение пустое или пользователь не авторизован');\n      return;\n    }\n\n    // Определяем получателя\n    let receiverId;\n    if (activeConversation) {\n      receiverId = activeConversation.user.id;\n    } else if (selectedUser) {\n      receiverId = selectedUser.id;\n    }\n    if (!receiverId) {\n      console.log('ID получателя не определен');\n      return;\n    }\n    console.log('Отправка сообщения пользователю:', receiverId, 'Текст:', newMessage.trim());\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:3000/api/messages', {\n        receiverId: receiverId,\n        text: newMessage.trim()\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Сообщение отправлено успешно:', response.data);\n      setNewMessage('');\n\n      // Обновляем данные\n      if (selectedUser) {\n        // После отправки первого сообщения создаем активный диалог\n        const newConv = {\n          user: selectedUser,\n          lastMessage: response.data,\n          unreadCount: 0\n        };\n        setActiveConversation(newConv);\n        setSelectedUser(null);\n        setMessages([response.data]);\n      } else {\n        // Добавляем сообщение в существующий диалог\n        setMessages(prev => [...prev, response.data]);\n      }\n\n      // Обновляем список диалогов\n      fetchConversations();\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Ошибка при отправке сообщения:', error);\n      console.error('Детали ошибки:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      alert('Не удалось отправить сообщение: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message));\n    }\n  };\n  const formatTime = dateString => {\n    return new Date(dateString).toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Если пользователь не авторизован, показываем сообщение\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0422\\u0440\\u0435\\u0431\\u0443\\u0435\\u0442\\u0441\\u044F \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443 \\u0434\\u043B\\u044F \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0430 \\u043A \\u0447\\u0430\\u0442\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/login'),\n        className: \"btn btn-primary\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0447\\u0430\\u0442\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 12\n    }, this);\n  }\n  const currentPartner = activeConversation ? activeConversation.user : selectedUser;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this) : conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${(activeConversation === null || activeConversation === void 0 ? void 0 : activeConversation.user.id) === conv.user.id ? 'active' : ''}`,\n          onClick: () => handleSelectConversation(conv),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-avatar\",\n            children: [conv.user.firstName[0], conv.user.lastName[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conversation-name\",\n                children: [conv.user.firstName, \" \", conv.user.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conversation-time\",\n                children: formatTime(conv.lastMessage.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-preview\",\n                children: conv.lastMessage.text.length > 30 ? conv.lastMessage.text.substring(0, 30) + '...' : conv.lastMessage.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), conv.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-badge\",\n              children: conv.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, conv.user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: currentPartner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-partner-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [currentPartner.firstName, \" \", currentPartner.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-role\",\n              children: currentPartner.role === 'organizer' ? 'Организатор' : 'Волонтер'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"new-conversation-badge\",\n              children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.length > 0 ? messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.senderId === user.id ? 'sent' : 'received'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatTime(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-messages\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedUser ? 'Начните разговор' : 'Нет сообщений'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"message-input-form\",\n          onSubmit: handleSendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n            className: \"message-input\",\n            disabled: !currentPartner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: !newMessage.trim() || !currentPartner,\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433 \\u0434\\u043B\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u043B\\u0438 \\u043D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\\"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0442\\u043E\\u0440\\u0443\\\" \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"PZKG7SFAD47SY6a6v7Tj9bQ4j68=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","user","_s","conversations","setConversations","activeConversation","setActiveConversation","messages","setMessages","newMessage","setNewMessage","loading","setLoading","selectedUser","setSelectedUser","messagesEndRef","navigate","fetchConversations","fetchMessages","interval","setInterval","clearInterval","checkForNewConversation","savedOrganizer","localStorage","getItem","organizer","JSON","parse","console","log","removeItem","existingConversation","find","conv","id","length","token","response","get","headers","data","error","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSelectConversation","conversation","handleSendMessage","e","preventDefault","trim","receiverId","post","text","newConv","lastMessage","unreadCount","prev","_error$response","_error$response2","_error$response2$data","alert","message","formatTime","dateString","Date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","currentPartner","map","firstName","lastName","createdAt","substring","role","senderId","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/emili/OneDrive/Рабочий стол/volonters/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ user }) {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [activeConversation, setActiveConversation] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchConversations();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user && (activeConversation || selectedUser)) {\r\n      if (activeConversation) {\r\n        fetchMessages();\r\n        // Опрос новых сообщений каждые 3 секунды\r\n        const interval = setInterval(fetchMessages, 3000);\r\n        return () => clearInterval(interval);\r\n      }\r\n    }\r\n  }, [activeConversation, selectedUser, user]);\r\n\r\n  // Проверяем, есть ли выбранный организатор для нового диалога\r\n  useEffect(() => {\r\n    const checkForNewConversation = () => {\r\n      const savedOrganizer = localStorage.getItem('selectedOrganizer');\r\n      \r\n      if (savedOrganizer) {\r\n        const organizer = JSON.parse(savedOrganizer);\r\n        console.log('Найден сохраненный организатор:', organizer);\r\n        \r\n        // Очищаем сохраненные данные\r\n        localStorage.removeItem('selectedOrganizer');\r\n        localStorage.removeItem('selectedProject');\r\n        \r\n        // Ищем существующий диалог\r\n        const existingConversation = conversations.find(\r\n          conv => conv.user.id === organizer.id\r\n        );\r\n        \r\n        if (existingConversation) {\r\n          console.log('Найден существующий диалог');\r\n          setActiveConversation(existingConversation);\r\n        } else {\r\n          console.log('Создаем новый диалог');\r\n          // Создаем временный объект пользователя для нового диалога\r\n          setSelectedUser(organizer);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (conversations.length > 0) {\r\n      checkForNewConversation();\r\n    }\r\n  }, [conversations]);\r\n\r\n  const fetchConversations = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('http://localhost:3000/api/messages/conversations', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      console.log('Загружены диалоги:', response.data);\r\n      setConversations(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке диалогов:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    if (!user || !activeConversation) return;\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(\r\n        `http://localhost:3000/api/messages/conversation/${activeConversation.user.id}`,\r\n        {\r\n          headers: { 'Authorization': `Bearer ${token}` }\r\n        }\r\n      );\r\n      setMessages(response.data);\r\n      scrollToBottom();\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке сообщений:', error);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleSelectConversation = (conversation) => {\r\n    setActiveConversation(conversation);\r\n    setSelectedUser(null);\r\n    setMessages([]);\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Попытка отправить сообщение...');\r\n    \r\n    if (!newMessage.trim() || !user) {\r\n      console.log('Сообщение пустое или пользователь не авторизован');\r\n      return;\r\n    }\r\n    \r\n    // Определяем получателя\r\n    let receiverId;\r\n    if (activeConversation) {\r\n      receiverId = activeConversation.user.id;\r\n    } else if (selectedUser) {\r\n      receiverId = selectedUser.id;\r\n    }\r\n    \r\n    if (!receiverId) {\r\n      console.log('ID получателя не определен');\r\n      return;\r\n    }\r\n\r\n    console.log('Отправка сообщения пользователю:', receiverId, 'Текст:', newMessage.trim());\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('http://localhost:3000/api/messages', {\r\n        receiverId: receiverId,\r\n        text: newMessage.trim()\r\n      }, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n\r\n      console.log('Сообщение отправлено успешно:', response.data);\r\n      setNewMessage('');\r\n      \r\n      // Обновляем данные\r\n      if (selectedUser) {\r\n        // После отправки первого сообщения создаем активный диалог\r\n        const newConv = {\r\n          user: selectedUser,\r\n          lastMessage: response.data,\r\n          unreadCount: 0\r\n        };\r\n        setActiveConversation(newConv);\r\n        setSelectedUser(null);\r\n        setMessages([response.data]);\r\n      } else {\r\n        // Добавляем сообщение в существующий диалог\r\n        setMessages(prev => [...prev, response.data]);\r\n      }\r\n      \r\n      // Обновляем список диалогов\r\n      fetchConversations();\r\n      \r\n    } catch (error) {\r\n      console.error('Ошибка при отправке сообщения:', error);\r\n      console.error('Детали ошибки:', error.response?.data);\r\n      alert('Не удалось отправить сообщение: ' + (error.response?.data?.error || error.message));\r\n    }\r\n  };\r\n\r\n  const formatTime = (dateString) => {\r\n    return new Date(dateString).toLocaleTimeString('ru-RU', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // Если пользователь не авторизован, показываем сообщение\r\n  if (!user) {\r\n    return (\r\n      <div className=\"chat-error\">\r\n        <h3>Требуется авторизация</h3>\r\n        <p>Пожалуйста, войдите в систему для доступа к чату</p>\r\n        <button onClick={() => navigate('/login')} className=\"btn btn-primary\">\r\n          Войти\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"chat-loading\">Загрузка чата...</div>;\r\n  }\r\n\r\n  const currentPartner = activeConversation ? activeConversation.user : selectedUser;\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-sidebar\">\r\n        <div className=\"chat-header\">\r\n          <h3>Сообщения</h3>\r\n        </div>\r\n        <div className=\"conversations-list\">\r\n          {conversations.length === 0 ? (\r\n            <div className=\"no-conversations\">\r\n              <p>Нет сообщений</p>\r\n            </div>\r\n          ) : (\r\n            conversations.map(conv => (\r\n              <div\r\n                key={conv.user.id}\r\n                className={`conversation-item ${activeConversation?.user.id === conv.user.id ? 'active' : ''}`}\r\n                onClick={() => handleSelectConversation(conv)}\r\n              >\r\n                <div className=\"conversation-avatar\">\r\n                  {conv.user.firstName[0]}{conv.user.lastName[0]}\r\n                </div>\r\n                <div className=\"conversation-info\">\r\n                  <div className=\"conversation-header\">\r\n                    <span className=\"conversation-name\">\r\n                      {conv.user.firstName} {conv.user.lastName}\r\n                    </span>\r\n                    <span className=\"conversation-time\">\r\n                      {formatTime(conv.lastMessage.createdAt)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"conversation-preview\">\r\n                    <span className=\"message-preview\">\r\n                      {conv.lastMessage.text.length > 30\r\n                        ? conv.lastMessage.text.substring(0, 30) + '...'\r\n                        : conv.lastMessage.text\r\n                      }\r\n                    </span>\r\n                  </div>\r\n                  {conv.unreadCount > 0 && (\r\n                    <span className=\"unread-badge\">{conv.unreadCount}</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-main\">\r\n        {currentPartner ? (\r\n          <>\r\n            <div className=\"chat-header\">\r\n              <div className=\"chat-partner-info\">\r\n                <h4>\r\n                  {currentPartner.firstName} {currentPartner.lastName}\r\n                </h4>\r\n                <span className=\"user-role\">\r\n                  {currentPartner.role === 'organizer' ? 'Организатор' : 'Волонтер'}\r\n                </span>\r\n                {selectedUser && (\r\n                  <span className=\"new-conversation-badge\">Новый диалог</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"messages-container\">\r\n              {messages.length > 0 ? (\r\n                messages.map(message => (\r\n                  <div\r\n                    key={message.id}\r\n                    className={`message ${message.senderId === user.id ? 'sent' : 'received'}`}\r\n                  >\r\n                    <div className=\"message-content\">\r\n                      <p>{message.text}</p>\r\n                      <span className=\"message-time\">\r\n                        {formatTime(message.createdAt)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"no-messages\">\r\n                  <p>{selectedUser ? 'Начните разговор' : 'Нет сообщений'}</p>\r\n                </div>\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n            <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Введите сообщение...\"\r\n                className=\"message-input\"\r\n                disabled={!currentPartner}\r\n              />\r\n              <button \r\n                type=\"submit\" \r\n                className=\"send-button\"\r\n                disabled={!newMessage.trim() || !currentPartner}\r\n              >\r\n                Отправить\r\n              </button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"no-chat-selected\">\r\n            <p>Выберите диалог для начала общения</p>\r\n            <p>Или нажмите \"Написать организатору\" на странице проекта</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}