{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emili\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\volonters\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  user\n}) {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [activeConversation, setActiveConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Если пользователь не авторизован, перенаправляем на страницу входа\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    if (user) {\n      checkForNewConversation();\n      fetchConversations();\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user && activeConversation) {\n      fetchMessages();\n      // Опрос новых сообщений каждые 3 секунды\n      const interval = setInterval(fetchMessages, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [activeConversation, user]);\n\n  // Проверяем, есть ли выбранный организатор для нового диалога\n  const checkForNewConversation = () => {\n    const savedOrganizer = localStorage.getItem('selectedOrganizer');\n    const savedProject = localStorage.getItem('selectedProject');\n    if (savedOrganizer) {\n      const organizer = JSON.parse(savedOrganizer);\n      setSelectedUser(organizer);\n\n      // Очищаем сохраненные данные\n      localStorage.removeItem('selectedOrganizer');\n      localStorage.removeItem('selectedProject');\n\n      // Находим существующий диалог или создаем новый\n      const existingConversation = conversations.find(conv => conv.user.id === organizer.id);\n      if (existingConversation) {\n        setActiveConversation(existingConversation);\n      } else {\n        // Создаем временный объект диалога\n        const newConversation = {\n          user: organizer,\n          lastMessage: {\n            text: 'Начните разговор',\n            createdAt: new Date().toISOString()\n          },\n          unreadCount: 0\n        };\n        setActiveConversation(newConversation);\n        setMessages([]);\n      }\n    }\n  };\n  const fetchConversations = async () => {\n    if (!user) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:3000/api/messages/conversations', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setConversations(response.data);\n      setLoading(false);\n\n      // После загрузки диалогов проверяем снова\n      checkForNewConversation();\n    } catch (error) {\n      console.error('Ошибка при загрузке диалогов:', error);\n      setLoading(false);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !activeConversation) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:3000/api/messages/conversation/${activeConversation.user.id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Ошибка при загрузке сообщений:', error);\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const handleSelectConversation = conversation => {\n    setActiveConversation(conversation);\n    setSelectedUser(null);\n    setMessages([]);\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !user) return;\n\n    // Определяем получателя\n    const receiverId = activeConversation ? activeConversation.user.id : selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id;\n    if (!receiverId) return;\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('http://localhost:3000/api/messages', {\n        receiverId: receiverId,\n        text: newMessage.trim()\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setNewMessage('');\n\n      // Если это был новый диалог, обновляем список диалогов\n      if (selectedUser) {\n        setSelectedUser(null);\n        fetchConversations();\n      } else {\n        fetchMessages();\n        fetchConversations();\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке сообщения:', error);\n      alert('Не удалось отправить сообщение');\n    }\n  };\n  const formatTime = dateString => {\n    return new Date(dateString).toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Если пользователь не авторизован, показываем сообщение\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0422\\u0440\\u0435\\u0431\\u0443\\u0435\\u0442\\u0441\\u044F \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443 \\u0434\\u043B\\u044F \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0430 \\u043A \\u0447\\u0430\\u0442\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/login'),\n        className: \"btn btn-primary\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0447\\u0430\\u0442\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this) : conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${(activeConversation === null || activeConversation === void 0 ? void 0 : activeConversation.user.id) === conv.user.id ? 'active' : ''}`,\n          onClick: () => handleSelectConversation(conv),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-avatar\",\n            children: [conv.user.firstName[0], conv.user.lastName[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conversation-name\",\n                children: [conv.user.firstName, \" \", conv.user.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conversation-time\",\n                children: formatTime(conv.lastMessage.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-preview\",\n                children: conv.lastMessage.text.length > 30 ? conv.lastMessage.text.substring(0, 30) + '...' : conv.lastMessage.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), conv.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-badge\",\n              children: conv.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, conv.user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: activeConversation || selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-partner-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: activeConversation ? `${activeConversation.user.firstName} ${activeConversation.user.lastName}` : `${selectedUser.firstName} ${selectedUser.lastName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-role\",\n              children: activeConversation ? activeConversation.user.role === 'organizer' ? 'Организатор' : 'Волонтер' : selectedUser.role === 'organizer' ? 'Организатор' : 'Волонтер'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"new-conversation-badge\",\n              children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.length > 0 ? messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.senderId === user.id ? 'sent' : 'received'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatTime(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 21\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-messages\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u0433\\u043E\\u0432\\u043E\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"message-input-form\",\n          onSubmit: handleSendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433 \\u0434\\u043B\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u043B\\u0438 \\u043D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\\"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0442\\u043E\\u0440\\u0443\\\" \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"YXOoF0/6xnc/Bh9A+VxlnJ3nGxM=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","user","_s","conversations","setConversations","activeConversation","setActiveConversation","messages","setMessages","newMessage","setNewMessage","loading","setLoading","selectedUser","setSelectedUser","messagesEndRef","navigate","checkForNewConversation","fetchConversations","fetchMessages","interval","setInterval","clearInterval","savedOrganizer","localStorage","getItem","savedProject","organizer","JSON","parse","removeItem","existingConversation","find","conv","id","newConversation","lastMessage","text","createdAt","Date","toISOString","unreadCount","token","response","get","headers","data","error","console","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSelectConversation","conversation","handleSendMessage","e","preventDefault","trim","receiverId","post","alert","formatTime","dateString","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","firstName","lastName","substring","role","message","senderId","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/emili/OneDrive/Рабочий стол/volonters/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ user }) {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [activeConversation, setActiveConversation] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Если пользователь не авторизован, перенаправляем на страницу входа\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      checkForNewConversation();\r\n      fetchConversations();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user && activeConversation) {\r\n      fetchMessages();\r\n      // Опрос новых сообщений каждые 3 секунды\r\n      const interval = setInterval(fetchMessages, 3000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [activeConversation, user]);\r\n\r\n  // Проверяем, есть ли выбранный организатор для нового диалога\r\n  const checkForNewConversation = () => {\r\n    const savedOrganizer = localStorage.getItem('selectedOrganizer');\r\n    const savedProject = localStorage.getItem('selectedProject');\r\n    \r\n    if (savedOrganizer) {\r\n      const organizer = JSON.parse(savedOrganizer);\r\n      setSelectedUser(organizer);\r\n      \r\n      // Очищаем сохраненные данные\r\n      localStorage.removeItem('selectedOrganizer');\r\n      localStorage.removeItem('selectedProject');\r\n      \r\n      // Находим существующий диалог или создаем новый\r\n      const existingConversation = conversations.find(\r\n        conv => conv.user.id === organizer.id\r\n      );\r\n      \r\n      if (existingConversation) {\r\n        setActiveConversation(existingConversation);\r\n      } else {\r\n        // Создаем временный объект диалога\r\n        const newConversation = {\r\n          user: organizer,\r\n          lastMessage: {\r\n            text: 'Начните разговор',\r\n            createdAt: new Date().toISOString()\r\n          },\r\n          unreadCount: 0\r\n        };\r\n        setActiveConversation(newConversation);\r\n        setMessages([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchConversations = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('http://localhost:3000/api/messages/conversations', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      setConversations(response.data);\r\n      setLoading(false);\r\n      \r\n      // После загрузки диалогов проверяем снова\r\n      checkForNewConversation();\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке диалогов:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    if (!user || !activeConversation) return;\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(\r\n        `http://localhost:3000/api/messages/conversation/${activeConversation.user.id}`,\r\n        {\r\n          headers: { 'Authorization': `Bearer ${token}` }\r\n        }\r\n      );\r\n      setMessages(response.data);\r\n      scrollToBottom();\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке сообщений:', error);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleSelectConversation = (conversation) => {\r\n    setActiveConversation(conversation);\r\n    setSelectedUser(null);\r\n    setMessages([]);\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !user) return;\r\n    \r\n    // Определяем получателя\r\n    const receiverId = activeConversation ? activeConversation.user.id : selectedUser?.id;\r\n    if (!receiverId) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post('http://localhost:3000/api/messages', {\r\n        receiverId: receiverId,\r\n        text: newMessage.trim()\r\n      }, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n\r\n      setNewMessage('');\r\n      \r\n      // Если это был новый диалог, обновляем список диалогов\r\n      if (selectedUser) {\r\n        setSelectedUser(null);\r\n        fetchConversations();\r\n      } else {\r\n        fetchMessages();\r\n        fetchConversations();\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке сообщения:', error);\r\n      alert('Не удалось отправить сообщение');\r\n    }\r\n  };\r\n\r\n  const formatTime = (dateString) => {\r\n    return new Date(dateString).toLocaleTimeString('ru-RU', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // Если пользователь не авторизован, показываем сообщение\r\n  if (!user) {\r\n    return (\r\n      <div className=\"chat-error\">\r\n        <h3>Требуется авторизация</h3>\r\n        <p>Пожалуйста, войдите в систему для доступа к чату</p>\r\n        <button onClick={() => navigate('/login')} className=\"btn btn-primary\">\r\n          Войти\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"chat-loading\">Загрузка чата...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-sidebar\">\r\n        <div className=\"chat-header\">\r\n          <h3>Сообщения</h3>\r\n        </div>\r\n        <div className=\"conversations-list\">\r\n          {conversations.length === 0 ? (\r\n            <div className=\"no-conversations\">\r\n              <p>Нет сообщений</p>\r\n            </div>\r\n          ) : (\r\n            conversations.map(conv => (\r\n              <div\r\n                key={conv.user.id}\r\n                className={`conversation-item ${activeConversation?.user.id === conv.user.id ? 'active' : ''}`}\r\n                onClick={() => handleSelectConversation(conv)}\r\n              >\r\n                <div className=\"conversation-avatar\">\r\n                  {conv.user.firstName[0]}{conv.user.lastName[0]}\r\n                </div>\r\n                <div className=\"conversation-info\">\r\n                  <div className=\"conversation-header\">\r\n                    <span className=\"conversation-name\">\r\n                      {conv.user.firstName} {conv.user.lastName}\r\n                    </span>\r\n                    <span className=\"conversation-time\">\r\n                      {formatTime(conv.lastMessage.createdAt)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"conversation-preview\">\r\n                    <span className=\"message-preview\">\r\n                      {conv.lastMessage.text.length > 30\r\n                        ? conv.lastMessage.text.substring(0, 30) + '...'\r\n                        : conv.lastMessage.text\r\n                      }\r\n                    </span>\r\n                  </div>\r\n                  {conv.unreadCount > 0 && (\r\n                    <span className=\"unread-badge\">{conv.unreadCount}</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-main\">\r\n        {activeConversation || selectedUser ? (\r\n          <>\r\n            <div className=\"chat-header\">\r\n              <div className=\"chat-partner-info\">\r\n                <h4>\r\n                  {activeConversation ? \r\n                    `${activeConversation.user.firstName} ${activeConversation.user.lastName}` : \r\n                    `${selectedUser.firstName} ${selectedUser.lastName}`\r\n                  }\r\n                </h4>\r\n                <span className=\"user-role\">\r\n                  {activeConversation ? \r\n                    (activeConversation.user.role === 'organizer' ? 'Организатор' : 'Волонтер') : \r\n                    (selectedUser.role === 'organizer' ? 'Организатор' : 'Волонтер')\r\n                  }\r\n                </span>\r\n                {selectedUser && (\r\n                  <span className=\"new-conversation-badge\">Новый диалог</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"messages-container\">\r\n              {messages.length > 0 ? (\r\n                messages.map(message => (\r\n                  <div\r\n                    key={message.id}\r\n                    className={`message ${message.senderId === user.id ? 'sent' : 'received'}`}\r\n                  >\r\n                    <div className=\"message-content\">\r\n                      <p>{message.text}</p>\r\n                      <span className=\"message-time\">\r\n                        {formatTime(message.createdAt)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"no-messages\">\r\n                  <p>Начните разговор</p>\r\n                </div>\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n            <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Введите сообщение...\"\r\n                className=\"message-input\"\r\n              />\r\n              <button type=\"submit\" className=\"send-button\">\r\n                Отправить\r\n              </button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"no-chat-selected\">\r\n            <p>Выберите диалог для начала общения</p>\r\n            <p>Или нажмите \"Написать организатору\" на странице проекта</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}